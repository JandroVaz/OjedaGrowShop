@using System.ComponentModel.DataAnnotations
@using System.IO
@using OjedaGrowShop.EF.Services
@using OjedaGrowShop.EF.Services.Interfaces
@inject NavigationManager NavigationManager

<style>
    .formClass {
        
        padding: 1rem;
       
    }
</style>

<MatThemeProvider Theme="@formLogin">
    <div class="row flex-wrap overflow-hidden mx-auto my-0 mb-5" style="border-radius:25px; max-width:620px;">
        <div class="col-12 gap-4" style="background-color:#66bb6a">
            <div class="row m-5 text-center mx-auto my-0">
                <h2>¡Contáctanos!</h2>
            </div>
            <div class="row text-center mx-auto my-0">
                <div class="mx-auto my-0 formClass text-center">
                    <EditForm Model="sendUserMessage" OnInvalidSubmit="SendMessage">
                        <DataAnnotationsValidator />
                        <div>
                            <MatTextField Label="Correo" @bind-Value="sendUserMessage.Email" Type="email" />
                            <ValidationMessage For="@(() => sendUserMessage.Email)" />
                        </div>
                        <div>
                            <MatTextField @bind-Value="@sendUserMessage.Message" Label="Introduce tu mensaje aquí" TextArea="true" Style="width:100%;max-width:450px; height:150px;"></MatTextField>
                            <ValidationMessage For="@(() => sendUserMessage.Message)" />
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                            <MatButton Type="submit" Raised="true">Registrarme</MatButton>
                        </div>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
</MatThemeProvider>
@code {
    //Colores del tema del login
    MatTheme formLogin = new MatTheme()
        {
            Primary = "#009624",

        };

    [Inject]
    IJSRuntime JS { get; set; }
    [Inject]
    public IMatToaster Toaster { get; set; }

    protected override void OnInitialized()
    {
        Helper.MatToastHelper.Toaster = Toaster;
    }

    SendMail sendUserMessage = new SendMail();

    public class SendMail
    {
        [Required(ErrorMessage = "El campo 'Correo' es obligatorio")]
        [RegularExpression("[a-zA-Z0-9_\\.\\+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-\\.]+", ErrorMessage = "Introduce un correo válido")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Debe contener un mensaje")]
        public string Message { get; set; }
    }

    private async void SendMessage()
    {

    }
}
